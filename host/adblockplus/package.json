{
  "name": "adblockplus",
  "private": true,
  "repository": "https://gitlab.com/adblockinc/ext/adblockplus/adblockplus",
  "license": "GPL-3.0",
  "engines": {
    "node": ">=18.17.1 <19",
    "npm": "9"
  },
  "scripts": {
    "$": "npm-dollar",
    "build": "npm run $ build.devenv",
    "build:local": "npm run $ create.devenv local 2",
    "build:release": "npm run $ build.release",
    "build:source": "gulp source",
    "csv-export": "node build/locale-sync/csv/main.js -e",
    "csv-import": "node build/locale-sync/csv/main.js -i && node build/locale-sync/normalize.js",
    "dist": "npm run $ create.dist",
    "eslint": "npm run $ lint.js",
    "eslint:adblockpluschrome": "eslint --ext .js,.cjs --ignore-path .gitignore adblockpluschrome/",
    "eslint:legacy": "eslint --ext .js,.mjs --ignore-path .gitignore --ignore-pattern /adblockpluschrome/ ./",
    "eslint:love": "eslint --ext .ts --ignore-path .gitignore src/",
    "lint": "npm run $ lint",
    "postinstall": "npx @adblockinc/rules adblockplus",
    "prettier": "npm run $ lint.prettier",
    "prettier-fix": "npm run $ lint-fix.prettier",
    "start": "http-server ./dist/devenv/local-mv2/",
    "sentry:login": "sentry-cli login",
    "sentry:release-new": "sentry-cli releases new $VERSION --org eyeo --project adblock-plus",
    "sentry:release-finalize": "sentry-cli releases finalize $VERSION --org eyeo --project adblock-plus",
    "sentry:sourcemaps": "sentry-cli sourcemaps inject --org eyeo --project adblock-plus ./dist/release/sourcemaps-mv3 && sentry-cli sourcemaps upload --release=$VERSION --org eyeo --project adblock-plus ./dist/release/sourcemaps-mv3",
    "test": "npm run $ test.unit",
    "test:end-to-end": "npm run $ test.end-to-end",
    "test:end-to-end:build": "node test/end-to-end/helper-extension/build.mjs",
    "test:end-to-end-local": "npm run test:end-to-end:build && cd test/end-to-end && node runTests.mjs --suite"
  },
  "$": {
    "build": {
      "devenv": {
        "chrome": {
          "mv2": "if [[ -z \"$1\" || \"$1\" == \"chrome\" && \"$2\" != \"3\" ]]; then $ create.devenv chrome 2; fi",
          "mv3": "if [[ -z \"$1\" || \"$1\" == \"chrome\" && \"$2\" != \"2\" ]]; then $ create.devenv chrome 3; fi"
        },
        "firefox": "if [[ -z \"$1\" || \"$1\" == \"firefox\" ]]; then $ create.devenv firefox 2; fi"
      },
      "release": {
        "chrome": {
          "mv2": "if [[ -z \"$1\" || \"$1\" == \"chrome\" && \"$2\" != \"3\" ]]; then $ create.release chrome 2; fi",
          "mv3": "if [[ -z \"$1\" || \"$1\" == \"chrome\" && \"$2\" != \"2\" ]]; then $ create.release chrome 3; fi"
        },
        "firefox": "if [[ -z \"$1\" || \"$1\" == \"firefox\" ]]; then $ create.release firefox 2; fi"
      }
    },
    "create": {
      "devenv": "gulp devenv -t $1 -m $2 --unhandled-rejections=strict",
      "dist": {
        "icons": "node build/icons-generation/index.js"
      },
      "release": "gulp build -c release -t $1 -m $2 --unhandled-rejections=strict"
    },
    "crowdin": {
      "download-translations": [
        "node build/locale-sync/crowdin/clear-files.js",
        "crowdin download",
        "for file in $(grep -rw './locale' -le '{}'); do rm $file; done",
        "node build/locale-sync/normalize.js"
      ],
      "upload-strings": "crowdin upload sources",
      "upload-translations": "crowdin upload translations --auto-approve-imported"
    },
    "lint": {
      "js": "eslint --ext .cjs,.js,.mjs,.ts --ignore-path .gitignore ./",
      "prettier": "prettier --check .",
      "ts": "tsc --noEmit",
      "locale": "node build/locale-linter ./locale/**/*.json"
    },
    "lint-fix": {
      "prettier": "prettier --write ."
    },
    "test": {
      "unit": {
        "legacy": "mocha \"./test/unit/**/*.spec.{js,mjs}\"",
        "standard": "jest"
      },
      "end-to-end": {
        "chromium": {
          "mv2": "if [[ -z \"$1\" || \"$1\" == \"chromium\" && \"$2\" != \"3\" ]]; then MANIFEST_VERSION=2 BROWSER=chromium npm run test:end-to-end-local ${3:-filterlists}; fi",
          "mv3": "if [[ -z \"$1\" || \"$1\" == \"chromium\" && \"$2\" != \"2\" ]]; then MANIFEST_VERSION=3 BROWSER=chromium npm run test:end-to-end-local ${3:-filterlists}; fi"
        },
        "firefox": {
          "mv2": "if [[ -z \"$1\" || \"$1\" == \"firefox\" && \"$2\" != \"3\" ]]; then MANIFEST_VERSION=2 BROWSER=firefox npm run test:end-to-end-local ${3:-filterlists}; fi",
          "mv3": "if [[ -z \"$1\" || \"$1\" == \"firefox\" && \"$2\" == \"3\" ]]; then echo \"Firefox tests are not supported with extension in Manifest v3 \"; exit 1; fi"
        },
        "edge": {
          "mv2": "if [[ -z \"$1\" || \"$1\" == \"edge\" && \"$2\" != \"3\" ]]; then MANIFEST_VERSION=2 BROWSER=edge npm run test:end-to-end-local ${3:-filterlists}; fi",
          "mv3": "if [[ -z \"$1\" || \"$1\" == \"edge\" && \"$2\" == \"3\" ]]; then echo \"Edge tests are not supported with extension in Manifest v3 \"; exit 1; fi"
        },
        "chrome": "if [[ -z \"$1\" || \"$1\" == \"chrome\" ]]; then echo \"Tests are not possible to be run in Chrome in AdBlock Plus. Did you mean Chromium?\"; exit 1; fi"
      }
    },
    "xtm": {
      "create": "node build/locale-sync/xtm --create",
      "details": "node build/locale-sync/xtm --details",
      "update": "node build/locale-sync/xtm --update",
      "build": "node build/locale-sync/xtm --build",
      "download": [
        "node build/locale-sync/xtm --download",
        "node build/locale-sync/normalize.js"
      ]
    }
  },
  "dependencies": {
    "@adblockinc/rules": "gitlab:eyeo/extensions/rules#ed9d690b095ad1bf060816342fb3ecc41c9293c1",
    "@eyeo/ext-ui-components": "*",
    "@eyeo/snippets": "1.7.0",
    "@eyeo/webext-ad-filtering-solution": "1.17.2",
    "@sentry/browser": "8.2.1",
    "@sentry/cli": "2.37.0",
    "argparse": "1.0.10",
    "canvas": "2.11.2",
    "css-loader": "6.8.1",
    "del": "7.0.0",
    "glob": "8.0.3",
    "gulp": "4.0.2",
    "gulp-gzip": "1.4.2",
    "gulp-tar": "3.1.0",
    "gulp-vinyl-zip": "2.2.1",
    "handlebars": "4.7.8",
    "hyperhtml-element": "3.15.2",
    "merge-stream": "2.0.0",
    "merge2": "1.4.1",
    "npm-dollar": "2.2.1",
    "react": "18.3.1",
    "react-dom": "18.3.1",
    "source-map-loader": "4.0.1",
    "style-loader": "3.3.3",
    "through": "2.3.8",
    "ts-loader": "9.3.1",
    "typescript": "4.7.3",
    "vinyl-named": "1.1.0",
    "webextension-polyfill": "0.8.0",
    "webpack": "5.93.0",
    "webpack-merge": "5.1.4",
    "webpack-stream": "7.0.0"
  },
  "devDependencies": {
    "@babel/core": "7.18.9",
    "@babel/preset-env": "7.18.9",
    "@babel/preset-react": "7.24.7",
    "@babel/preset-typescript": "7.18.6",
    "@eyeo/get-browser-binary": "0.17.0",
    "@eyeo/test-utils": "*",
    "@types/jest": "29.5.12",
    "@types/webextension-polyfill": "0.8.0",
    "@typescript-eslint/eslint-plugin": "6.11.0",
    "@typescript-eslint/parser": "6.11.0",
    "@wdio/cli": "8.32.3",
    "@wdio/firefox-profile-service": "8.32.2",
    "@wdio/local-runner": "8.32.3",
    "@wdio/mocha-framework": "8.32.3",
    "@wdio/spec-reporter": "8.32.2",
    "@xmldom/xmldom": "0.8.10",
    "adm-zip": "0.5.9",
    "babel-jest": "28.1.3",
    "basichtml": "2.4.9",
    "chai": "4.3.6",
    "csv": "6.1.3",
    "dotenv": "16.4.5",
    "dotenv-webpack": "8.1.0",
    "eslint": "8.34.0",
    "eslint-config-eyeo": "3.2.0",
    "eslint-config-love": "43.1.0",
    "eslint-config-prettier": "9.1.0",
    "eslint-plugin-n": "16.2.0",
    "eslint-plugin-prettier": "5.1.3",
    "eslint-plugin-promise": "6.1.1",
    "form-data": "4.0.0",
    "http-server": "14.1.1",
    "jest": "29.7.0",
    "jest-environment-jsdom": "29.7.0",
    "jest-webextension-mock": "3.8.9",
    "js-yaml": "4.1.0",
    "minimist": "1.2.6",
    "mocha": "10.7.3",
    "moment": "2.29.4",
    "node-fetch": "2.7.0",
    "prettier": "3.3.3"
  },
  "nx": {
    "targets": {
      "build": {
        "outputs": [
          "{projectRoot}/dist/devenv"
        ]
      },
      "build:release": {
        "outputs": [
          "{projectRoot}/dist/release"
        ]
      }
    }
  }
}
