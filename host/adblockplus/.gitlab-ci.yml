# This file is part of Adblock Plus <https://adblockplus.org/>,
# Copyright (C) 2006-present eyeo GmbH
#
# Adblock Plus is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as
# published by the Free Software Foundation.
#
# Adblock Plus is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Adblock Plus.  If not, see <http://www.gnu.org/licenses/>.

spec:
  inputs:
    parent_pipeline_source:
      type: string
      description: "Value of CI_PIPELINE_SOURCE in the parent pipeline"

---
default:
  image: node:18.17.1
  cache: # Cache modules using lock file
    key:
      files:
        - package-lock.json
    paths:
      - .npm/
  tags:
    - "GCP"
  interruptible: true

stages:
  - build
  - checkfilesizes
  - unit
  - compliance
  - end-to-end
  - release

# Pipeline rules
.always:
  rules:
    # Do not trigger merge request pipelines
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - when: on_success

.release-or-main:
  rules:
    # Do not trigger merge request pipelines
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    # Run automatically on release and main branch
    - if: $CI_COMMIT_BRANCH == "adblockplus-release" || $CI_COMMIT_BRANCH == "main"
    # Run manually on all other branches
    - when: manual
      allow_failure: true

################################################################################
# Build
################################################################################

.build:
  stage: build
  before_script:
    # Update dependencies
    - npm ci --cache .npm --prefer-offline

build:
  extends: .build
  script:
    # Create .env file from CI variables
    - echo "CDP_AGGREGATE_URL=\"$ADBLOCKPLUS_CDP_AGGREGATE_URL\"" >> host/adblockplus/.env
    - echo "CDP_BEARER=\"$ADBLOCKPLUS_CDP_BEARER\"" >> host/adblockplus/.env
    - echo "CDP_PING_URL=\"$ADBLOCKPLUS_CDP_PING_URL\"" >> host/adblockplus/.env
    - echo "EYEOMETRY_BEARER=\"$ADBLOCKPLUS_EYEOMETRY_BEARER\"" >> host/adblockplus/.env
    - echo "EYEOMETRY_URL=\"$ADBLOCKPLUS_EYEOMETRY_URL\"" >> host/adblockplus/.env
    - echo "SENTRY_DSN=\"$ADBLOCKPLUS_SENTRY_DSN\"" >> host/adblockplus/.env
    - echo "SENTRY_ENVIRONMENT=\"$ADBLOCKPLUS_SENTRY_ENVIRONMENT\"" >> host/adblockplus/.env
    # Create source archive
    - npm run build:source -- --scope=adblockplus
    # Create extension builds
    - npm run build:release -- --scope=adblockplus
  artifacts:
    name: "adblockplus-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHORT_SHA}"
    paths:
      - host/adblockplus/dist/release/adblockplus-*.tar.gz
      - host/adblockplus/dist/release/adblockplus-chrome-*-mv2.zip
      - host/adblockplus/dist/release/adblockplus-chrome-*-mv3.zip
      - host/adblockplus/dist/release/adblockplus-chromedevelopment-*-mv3.zip
      - host/adblockplus/dist/release/adblockplus-firefox-*-mv2.xpi

buildfromsource:
  stage: build
  needs: ["build"]
  script:
    # We need to generate the builds outside of the git repo to avoid any
    # implicit dependencies to git in our build scripts
    - mkdir /tmp/source
    - tar xvf host/adblockplus/dist/release/adblockplus-*.tar.gz -C /tmp/source
    - cd /tmp/source
    - npm ci --cache .npm --prefer-offline
    # Create extension builds from source archive
    - npm run build:release -- --scope=adblockplus
  after_script:
    # We cannot refer to artifacts in directories outside of the project
    - cp -r /tmp/source/host/adblockplus/dist/release host/adblockplus/dist/source
  artifacts:
    name: "adblockplus-source-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHORT_SHA}"
    paths:
      - host/adblockplus/dist/source/adblockplus-chrome-*-mv2.zip
      - host/adblockplus/dist/source/adblockplus-chrome-*-mv3.zip
      - host/adblockplus/dist/source/adblockplus-firefox-*-mv2.xpi
  rules:
    - !reference [.release-or-main, rules]

# ################################################################################
# # Check filesizes
# ################################################################################

.checkfilesizes:
  image: alpine:latest
  stage: checkfilesizes
  script:
    - unzip -d unpacked-extension/ host/adblockplus/dist/release/$EXTENSION
    - cd unpacked-extension/
    - if [ $(find . -type f -name '*.js' -size +4000k | wc -l) -gt 0 ]; then
      echo 'Some extension files are bigger than 4 MB:' &&
      find . -type f -name '*.js' -size +4000k -exec ls -lh {} \; &&
      exit 1;
      else
      echo 'All extension files are smaller than 4 MB' &&
      exit 0;
      fi

checkfilesizes:MV3:chrome:
  extends: .checkfilesizes
  variables:
    EXTENSION: adblockplus-chrome-*-mv3.zip

checkfilesizes:MV2:chrome:
  extends: .checkfilesizes
  variables:
    EXTENSION: adblockplus-chrome-*-mv2.zip

checkfilesizes:MV2:firefox:
  extends: .checkfilesizes
  variables:
    EXTENSION: adblockplus-firefox-*-mv2.xpi

# ################################################################################
# Check build sizes
# ################################################################################

.checkbuildsizes:
  stage: checkfilesizes
  needs: ["build", "buildfromsource"]
  before_script:
    - if [ ! -f $SOURCE_BUILD ] || [ ! -f $REPOSITORY_BUILD ]; then
      echo "File not found" &&
      exit 1;
      fi
  script:
    - if((`stat -c%s $REPOSITORY_BUILD`!=`stat -c%s $SOURCE_BUILD`)); then
      echo "Build from source archive and build from the repository are not the same size" &&
      ls -l $REPOSITORY_BUILD &&
      ls -l $SOURCE_BUILD &&
      exit 1;
      else
      echo "Build from source archive and build from the repository are the same size" &&
      exit 0;
      fi
  rules:
    - !reference [.release-or-main, rules]

checkbuildsizes:MV3:chrome:
  extends: .checkbuildsizes
  variables:
    REPOSITORY_BUILD: host/adblockplus/dist/release/adblockplus-chrome-*-mv3.zip
    SOURCE_BUILD: host/adblockplus/dist/source/adblockplus-chrome-*-mv3.zip

checkbuildsizes:MV2:chrome:
  extends: .checkbuildsizes
  variables:
    REPOSITORY_BUILD: host/adblockplus/dist/release/adblockplus-chrome-*-mv2.zip
    SOURCE_BUILD: host/adblockplus/dist/source/adblockplus-chrome-*-mv2.zip

checkbuildsizes:MV2:firefox:
  extends: .checkbuildsizes
  variables:
    REPOSITORY_BUILD: host/adblockplus/dist/release/adblockplus-firefox-*-mv2.xpi
    SOURCE_BUILD: host/adblockplus/dist/source/adblockplus-firefox-*-mv2.xpi

################################################################################
# Compliance tests
################################################################################

.compliance:
  stage: compliance
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  needs: ["build"]
  before_script:
    - apk add bash git
  script:
    - TERMINAL=t EXTENSION=host/adblockplus/dist/release/$EXTENSION ./host/adblockplus/test/compliance.sh
  after_script:
    - docker cp $(docker ps -aqf ancestor=compliance):/testpages.adblockplus.org/test/screenshots host/adblockplus/ 2> /dev/null
  artifacts:
    paths:
      - host/adblockplus/screenshots/
    when: on_failure
    expire_in: 1 month
  rules:
    - !reference [.always, rules]

.compliance:MV3:
  extends: .compliance
  variables:
    EXTENSION: adblockplus-chrome-*-mv3.zip
    MANIFEST: mv3

comp:MV3:chromium:latest:
  extends: .compliance:MV3
  variables:
    BROWSER: chromium latest

comp:MV3:edge:latest:
  extends: .compliance:MV3
  variables:
    BROWSER: edge latest

.compliance:MV2:
  extends: .compliance
  variables:
    EXTENSION: adblockplus-chrome-*-mv2.zip
    MANIFEST: mv2

comp:MV2:chromium:last-mv2-version:
  extends: .compliance:MV2
  variables:
    BROWSER: chromium 128.0.6613.0

comp:MV2:edge:latest:
  extends: .compliance:MV2
  variables:
    BROWSER: edge latest

comp:MV2:chromium:oldest:
  extends: .compliance:MV2
  variables:
    BROWSER: chromium 77.0.3865.0

comp:MV2:firefox:latest:
  extends: .compliance:MV2
  variables:
    BROWSER: firefox latest
    EXTENSION: adblockplus-firefox-*-mv2.xpi

comp:MV2:firefox:oldest:
  extends: .compliance:MV2
  variables:
    BROWSER: firefox 68.0
    EXTENSION: adblockplus-firefox-*-mv2.xpi

################################################################################
# End-to-end tests
################################################################################

.end-to-end:
  stage: end-to-end
  needs: ["build"]

.end-to-end:lambdatest:
  extends: .end-to-end
  variables:
    LT_USERNAME: $LT_USERNAME
    LT_ACCESS_KEY: $LT_ACCESS_KEY
    SUITE: all
  before_script:
    - cd host/adblockplus
  script:
    - npm ci --cache .npm --prefer-offline
    - npm run test:$CONFIGURATION $SUITE 2>&1 | tee lambdatest_output.txt || true
    - apt-get update
    - apt-get -y install default-jre-headless
    - npx -y allure-commandline generate test/end-to-end/allure-results -o allure-report
    - |
      log_output=$(cat lambdatest_output.txt)
      regex_pattern="passed, [1-9][0-9]* failed"
      if [[ $log_output =~ $regex_pattern ]]; then
        echo "Failed test cases found. Failing the job."
        exit 1
      else
        echo "No failed test cases found. Job will pass."
      fi
  timeout: 120m
  artifacts:
    when: always
    paths:
      - host/adblockplus/allure-report
    expire_in: 1 week
  rules:
    # Do not trigger a merge request pipeline
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $[[ inputs.parent_pipeline_source ]] == "schedule"
      when: on_success
    - if: $CI_COMMIT_BRANCH == "adblockplus-release"
      when: on_success
    - when: manual
  allow_failure: true

end-to-end:lambdatest:MV2:oldbrowsers:
  extends: .end-to-end:lambdatest
  variables:
    CONFIGURATION: end-to-end-old-browsers
    SUITE: oldbrowsers

end-to-end:lambdatest:all:
  extends: .end-to-end:lambdatest
  before_script:
    - cd host/adblockplus
    - npm install axios
    - export MV3_BUILD_CLOUD_URL=$(node test/end-to-end/upload-extension.js $LT_USERNAME $LT_ACCESS_KEY $CHROME_BUILD_MV3)
    - echo $MV3_BUILD_CLOUD_URL
  variables:
    CONFIGURATION: end-to-end-lambdatest
    CHROME_BUILD_MV3: dist/release/adblockplus-chrome-*-mv3.zip

.end-to-end:docker:
  extends: .end-to-end
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  script:
    - docker build -t end-to-end -f host/adblockplus/test/end-to-end/Dockerfile --build-arg MANIFEST_VERSION=$MANIFEST_VERSION --build-arg BROWSER=$BROWSER --build-arg BUILD_EXTENSION=false .
    - docker run --cpus=2 --shm-size=2g -t -e SUITE -e CI end-to-end
  after_script:
    - IMAGE_ID=$(docker ps -aqf ancestor=end-to-end)
    - docker cp $IMAGE_ID:/extensions/host/adblockplus/test/end-to-end/screenshots host/adblockplus 2> /dev/null
  artifacts:
    paths:
      - host/adblockplus/screenshots/
    when: on_failure
    expire_in: 1 mo
  rules:
    - !reference [.always, rules]
  variables:
    SUITE: filterlists

end-to-end:MV2:firefox:
  extends: .end-to-end:docker
  variables:
    MANIFEST_VERSION: 2
    BROWSER: firefox

end-to-end:MV2:edge:
  extends: .end-to-end:docker
  variables:
    MANIFEST_VERSION: 2
    BROWSER: edge

end-to-end:MV3:chromium:
  extends: .end-to-end:docker
  variables:
    MANIFEST_VERSION: 3
    BROWSER: chromium

################################################################################
# Release
################################################################################

create_release:
  stage: release
  image: gitlab/glab
  rules:
    - if: '$CI_COMMIT_TAG =~ /^(adblockplus)-v?\d+(\.\d+)*$/'
      when: on_success
    - when: never
  script:
    - apk add nodejs
    - version=${CI_COMMIT_TAG/adblockplus-/""}
    - release_notes=$(node scripts/release-utils/get-release-notes.js adblockplus $version)
    - glab auth login --token $GITLAB_TOKEN_RELEASE
    - glab release create $CI_COMMIT_TAG -n "Adblock Plus $version" host/adblockplus/dist/release/* -N "$release_notes"
    - npm run sentry:login
    - VERSION=$version npm run sentry:release-new
    - npm run sentry:sourcemaps
    - VERSION=$version npm run sentry:release-finalize
