# This file is part of AdBlock  <https://getadblock.com/>,
# Copyright (C) 2013-present Adblock, Inc.
#
# AdBlock is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as
# published by the Free Software Foundation.
#
# AdBlock is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with AdBlock.  If not, see <http://www.gnu.org/licenses/>.

spec:
  inputs:
    workspacepath:
      type: string
      description: "Path to the workspace directory"
      default: "."

    parent_pipeline_source:
      type: string
      description: "Value of CI_PIPELINE_SOURCE in the parent pipeline"

---
default:
  image: node:18.17.1
  cache: # Cache modules using lock file
    key:
      files:
        - package-lock.json
    paths:
      - .npm/
  tags:
    - "GCP"
  interruptible: true

stages:
  - build
  - checkfilesizes
  - compliance
  - end-to-end

# Pipeline rules
.release-or-main:
  rules:
    # Do not trigger merge request pipelines
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    # Run automatically on release and main branch
    - if: $CI_COMMIT_BRANCH == "adblock-release" || $CI_COMMIT_BRANCH == "main"
    # Run manually on all other branches
    - when: manual
      allow_failure: true

################################################################################
# Build
################################################################################

.build:
  stage: build
  before_script:
    - npm ci --cache .npm --prefer-offline

build:
  extends: .build
  script:
    # Create .env file from CI variables
    - echo "CDP_AGGREGATE_URL=\"$ADBLOCK_CDP_AGGREGATE_URL\"" >> host/adblock/.env
    - echo "CDP_BEARER=\"$ADBLOCK_CDP_BEARER\"" >> host/adblock/.env
    - echo "CDP_PING_URL=\"$ADBLOCK_CDP_PING_URL\"" >> host/adblock/.env
    - echo "EYEOMETRY_BEARER=\"$ADBLOCK_EYEOMETRY_BEARER\"" >> host/adblock/.env
    - echo "EYEOMETRY_URL=\"$ADBLOCK_EYEOMETRY_URL\"" >> host/adblock/.env
    # Create source archive
    - npm run build:source -- --scope=AdBlock
    # Create extension builds
    - npm run build:release -- --scope=AdBlock
    - npm run build:beta -- --scope=AdBlock
  artifacts:
    name: "adblock-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHORT_SHA}"
    paths:
      - host/adblock/dist/release/adblock-*.tar.gz
      - host/adblock/dist/release/adblock-chrome-*-mv2.zip
      - host/adblock/dist/release/adblock-chrome-*-mv3.zip
      - host/adblock/dist/release/adblock-firefox-*-mv2.xpi
      - host/adblock/dist/release/adblock-firefox-*-mv2.xpi
      - host/adblock/dist/release/adblockbeta-chrome-*-mv3.zip

buildfromsource:
  stage: build
  needs: ["build"]
  before_script:
    - cd host/adblock
  script:
    # We need to generate the builds outside of the git repo to avoid any
    # implicit dependencies to git in our build scripts
    - mkdir /tmp/source
    - tar xvf dist/release/adblock-*.tar.gz -C /tmp/source
    - cd /tmp/source
    - npm ci --cache .npm --prefer-offline

    # Mmmmmmm
    - cd ../../
    # Create extension builds from source archive
    - npm run build:release -- --scope=AdBlock
  after_script:
    # We cannot refer to artifacts in directories outside of the project
    - cp -r /tmp/source/host/adblock/dist/release host/adblock/dist/source
  artifacts:
    name: "adblockplus-source-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHORT_SHA}"
    paths:
      - host/adblock/dist/source/adblock-chrome-*-mv2.zip
      - host/adblock/dist/source/adblock-chrome-*-mv3.zip
      - host/adblock/dist/source/adblock-firefox-*-mv2.xpi
  rules:
    - !reference [.release-or-main, rules]

lint:
  extends: .build
  script:
    - npm run lint -- --scope=AdBlock

################################################################################
# Check filesizes
################################################################################

.checkfilesizes:
  image: alpine:latest
  stage: checkfilesizes
  before_script:
    - cd host/adblock
  script:
    - unzip -d unpacked-extension/ dist/release/$EXTENSION
    - cd unpacked-extension/
    - if [ $(find . -type f -name '*.js' -size +4000k | wc -l) -gt 0 ]; then
      echo 'Some extension files are bigger than 4 MB:' &&
      find . -type f -name '*.js' -size +4000k -exec ls -lh {} \; &&
      exit 1;
      else
      echo 'All extension files are smaller than 4 MB' &&
      exit 0;
      fi

checkfilesizes:chrome_mv2:
  extends: .checkfilesizes
  variables:
    EXTENSION: adblock-chrome-*-mv2.zip

checkfilesizes:chrome_mv3:
  extends: .checkfilesizes
  variables:
    EXTENSION: adblock-chrome-*-mv3.zip

checkfilesizes:firefox_mv2:
  extends: .checkfilesizes
  variables:
    EXTENSION: adblock-firefox-*-mv2.xpi

# ################################################################################
# Check build sizes
# ################################################################################

.checkbuildsizes:
  stage: checkfilesizes
  needs: ["build", "buildfromsource"]
  before_script:
    - cd host/adblock
    - if [ ! -f $SOURCE_BUILD ] || [ ! -f $REPOSITORY_BUILD ]; then
      echo "File not found" &&
      exit 1;
      fi
  script:
    - if((`stat -c%s $REPOSITORY_BUILD`!=`stat -c%s $SOURCE_BUILD`)); then
      echo "Build from source archive and build from the repository are not the same size" &&
      ls -l $REPOSITORY_BUILD &&
      ls -l $SOURCE_BUILD &&
      exit 1;
      else
      echo "Build from source archive and build from the repository are the same size" &&
      exit 0;
      fi
  rules:
    - !reference [.release-or-main, rules]

checkbuildsizes:MV3:chrome:
  extends: .checkbuildsizes
  variables:
    REPOSITORY_BUILD: dist/release/adblock-chrome-*-mv3.zip
    SOURCE_BUILD: dist/source/adblock-chrome-*-mv3.zip

checkbuildsizes:MV2:chrome:
  extends: .checkbuildsizes
  variables:
    REPOSITORY_BUILD: dist/release/adblock-chrome-*-mv2.zip
    SOURCE_BUILD: dist/source/adblock-chrome-*-mv2.zip

checkbuildsizes:MV2:firefox:
  extends: .checkbuildsizes
  variables:
    REPOSITORY_BUILD: dist/release/adblock-firefox-*-mv2.xpi
    SOURCE_BUILD: dist/source/adblock-firefox-*-mv2.xpi

################################################################################
# Compliance tests
################################################################################

.docker:
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  needs: ["build"]

.compliance:
  stage: compliance
  extends: .docker
  before_script:
    - apk add bash git
    - cd host/adblock
  script:
    - TERMINAL=t EXTENSION=dist/release/$EXTENSION ./test/compliance.sh
  after_script:
    - cd host/adblock
    - docker cp $(docker ps -aqf ancestor=compliance):/testpages.adblockplus.org/test/screenshots . 2> /dev/null
  artifacts:
    paths:
      - host/adblock/screenshots/
    when: always
    expire_in: 1 month

comp:MV3:chromium:latest:
  extends: .compliance
  variables:
    BROWSER: chromium latest
    EXTENSION: adblock-chrome-*-mv3.zip

comp:MV3:edge:latest:
  extends: .compliance
  variables:
    BROWSER: edge latest
    EXTENSION: adblock-chrome-*-mv3.zip

comp:MV2:chromium:last-mv2-version:
  extends: .compliance
  variables:
    BROWSER: chromium 128.0.6613.0
    EXTENSION: adblock-chrome-*-mv2.zip

comp:MV2:edge:latest:
  extends: .compliance
  variables:
    BROWSER: edge latest
    EXTENSION: adblock-chrome-*-mv2.zip

comp:MV2:firefox:latest:
  extends: .compliance
  variables:
    BROWSER: firefox latest
    EXTENSION: adblock-firefox-*-mv2.xpi

comp:MV2:chromium:oldest:
  extends: .compliance
  variables:
    BROWSER: chromium 77.0.3865.0
    EXTENSION: adblock-chrome-*-mv2.zip
# https://eyeo.atlassian.net/browse/EE-542
# comp:MV2:firefox:oldest:
#   extends: .compliance
#   variables:
#     BROWSER: firefox 75.0
#     EXTENSION: adblock-firefox-*-mv2.xpi

################################################################################
# End-to-end tests
################################################################################

.end-to-end:
  stage: end-to-end
  extends: .docker
  before_script:
    - cd host/adblock
  script:
    - docker build -t end-to-end -f test/end-to-end/Dockerfile .
    - docker run --cpus=2 --shm-size=2g -t -e BROWSER -e MANIFEST_VERSION end-to-end
  after_script:
    - cd host/adblock
    - IMAGE_ID=$(docker ps -aqf ancestor=end-to-end)
    - docker cp $IMAGE_ID:/adblock/test/end-to-end/screenshots . 2> /dev/null
  artifacts:
    paths:
      - host/adblock/screenshots/
    when: on_failure
    expire_in: 1 mo

end-to-end:MV2:firefox:
  extends: .end-to-end
  variables:
    BROWSER: firefox
    MANIFEST_VERSION: 2

end-to-end:MV2:edge:
  extends: .end-to-end
  variables:
    BROWSER: edge
    MANIFEST_VERSION: 2

end-to-end:MV3:chromium:
  extends: .end-to-end
  variables:
    BROWSER: chromium
    MANIFEST_VERSION: 3
